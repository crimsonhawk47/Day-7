import os, copy
from collections import defaultdict as dd
os.chdir(r'C:\Users\Gabriel\Desktop')
lines = open('.\Advent.txt').read().splitlines()
inst = []
gate = dd(list)
final = []
workerLength = 5
worker = [False for x in range(workerLength)]
timer = [999 for x in range(workerLength)]
total=0

inst = [(line.split(' ')[1], line.split(' ')[7]) for line in lines]

for i in inst: #Zeroing the gate, getting 26 empty keys for every letter in the alphabet
    gate[i[0]] = []
    gate[i[1]] = []

keyTime = {y:x for x,y in enumerate(sorted(gate), start=1)} #Making a dict of keys and the time it takes to complete each of them (A = 61, z = 86)
for i in keyTime:
    keyTime[i] = keyTime[i] + 60

def workSort(): #This function returns a list of all "ready to go"
    return sorted({key: num for key, num in gate.items() if len(num) == 0 and key not in worker})

for i in gate:
    [gate[i].append(x[0]) for x in inst if i == x[1]]

print('---------------------------------------------')

while len(final)<26:
    if any(t == 0 for t in timer):
        noTimer = [w for w in range(len(timer)) if timer[w] == 0]
        for t in range(len(noTimer)):
            start = worker[noTimer[t]]
            for i in gate:
                if start in gate[i]:
                    gate[i].remove(start)
            final.append(start)
            gate = {x:y for x,y in gate.items() if x!=start}
            worker[noTimer[t]] = False
    if len(final) == 26:
        break
    if any(w == 0 for w in worker):
        noWorker = [w for w in range(len(worker)) if worker[w] == False]
        for i in range(min(len(workSort()), len(noWorker))):
            if len(workSort()):
                start = workSort()[0]
                worker[noWorker[i]] = workSort()[0]
                timer[noWorker[i]] = keyTime[start]
    timer = [w-1 for w in timer]
    total += 1


stri = str()
for i in final:
    stri = stri + i

print('Part 2 answer is', total)
print('BONUS, final sequence is =', stri)
print('---------------------------------------------')
